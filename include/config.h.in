#pragma once
#ifndef _CONFIG_H
#define _CONFIG_H

//general options
#cmakedefine CMAKE_BUILD_TYPE "@CMAKE_BUILD_TYPE@"
#cmakedefine CMAKE_CXX_COMPILER_ID "@CMAKE_CXX_COMPILER_ID@"
#cmakedefine CMAKE_CXX_COMPILER_VERSION "@CMAKE_CXX_COMPILER_VERSION@"
#cmakedefine HAVE_RESTRICT
#cmakedefine RESTRICT_KEYWORD @RESTRICT_KEYWORD@
#cmakedefine HAVE_FORCEINLINE
#cmakedefine FORCEINLINE_KEYWORD @FORCEINLINE_KEYWORD@
#cmakedefine HAVE_ASSUME_ALIGNED
#cmakedefine ASSUME_ALIGNED_KEYWORD @ASSUME_ALIGNED_KEYWORD@
#cmakedefine DEFAULT_CACHE_LINE_SIZE @DEFAULT_CACHE_LINE_SIZE@

//build info strings
#cmakedefine INFO_COMMON_LIBS "@INFO_COMMON_LIBS@"
#cmakedefine INFO_APP_LIBS "@INFO_APP_LIBS@"
#cmakedefine INFO_CALCAPP_LIBS "@INFO_CALCAPP_LIBS@"
#cmakedefine INFO_COMPILE_OPTIONS "@INFO_COMPILE_OPTIONS@"
#cmakedefine INFO_CXX_FLAGS "@INFO_CXX_FLAGS@"
#cmakedefine INFO_C_FLAGS "@INFO_C_FLAGS@"
#cmakedefine INFO_GIT_REFSPEC "@INFO_GIT_REFSPEC@"
#cmakedefine INFO_GIT_SHA1 "@INFO_GIT_SHA1@"
#cmakedefine INFO_BUILD_OPTIONS "@INFO_BUILD_OPTIONS@"
#cmakedefine INFO_HAVE_OPTIONS "@INFO_HAVE_OPTIONS@"
/* #cmakedefine INFO_CMAKE_FEATURE_SUMMARY "@INFO_CMAKE_FEATURE_SUMMARY@" */

//build options
#cmakedefine BUILD_APPS
#cmakedefine BUILD_FASTMATH
#cmakedefine BUILD_QUAD 
#cmakedefine BUILD_THREADING 
#cmakedefine BUILD_VANILLA 

//third parties
#cmakedefine HAVE_TCMALLOC
#cmakedefine HAVE_ARMADILLO
#cmakedefine HAVE_BLAS
#cmakedefine HAVE_BOOST
#cmakedefine HAVE_BOOST_MPREAL
#cmakedefine HAVE_BOOST_UBLAS
#cmakedefine HAVE_CILK
//#cmakedefine HAVE_CLBLAS
//#cmakedefine HAVE_CUBLAS
#cmakedefine HAVE_EIGEN
#cmakedefine HAVE_MPREAL
#cmakedefine HAVE_MTL
//#cmakedefine HAVE_NVBLAS
#cmakedefine HAVE_OPENMP
#cmakedefine HAVE_PTHREADS
#cmakedefine HAVE_QUADMATH
#cmakedefine HAVE_TBB

#ifdef HAVE_BLAS
#cmakedefine BLAS_VENDOR "@BLAS_VENDOR@"
#else
# define BLAS_VENDOR "None"
#endif

//generic defines and includes

#ifdef HAVE_BOOST
# define BOOST_ALL_DYN_LINK
#endif

#ifdef HAVE_BOOST_UBLAS
# ifdef NDEBUG
#   define BOOST_UBLAS_NDEBUG
# endif
#endif

#ifdef HAVE_RESTRICT
# define __RESTRICT RESTRICT_KEYWORD
#else
# define __RESTRICT
#endif

#ifdef HAVE_FORCEINLINE
# define __FORCEINLINE FORCEINLINE_KEYWORD
#else
# define __FORCEINLINE
#endif

//selections for use with C11 _Generic
//TODO: setup proper macro for backend type
#ifdef HAVE_QUADMATH
# define QUAD_SELECTOR(Y) __float128*: Y,
#else
# define QUAD_SELECTOR(Y)
#endif

#ifdef HAVE_MPREAL
# define MPREAL_SELECTOR(Y) mpfr_t*: Y,
#else
# define MPREAL_SELECTOR(Y)
#endif

#ifndef DEFAULT_CACHE_LINE_SIZE
# define DEFAULT_CACHE_LINE_SIZE 64
#endif

#ifndef __ASSUME_ALIGNED
# if defined( __clang__ )
#   if __clang_major__ >= 3 && __clang_minor__ >= 8
#     define __ASSUME_ALIGNED( X , Y ) (X) = __builtin_assume_aligned( (X) , (Y) )
#   else
#     define __ASSUME_ALIGNED( X, Y )
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define __ASSUME_ALIGNED( X , Y ) __assume_aligned( (X) , (Y) )
# elif defined( __GNUC__ )
#   define __ASSUME_ALIGNED( X , Y ) (X) = __builtin_assume_aligned( (X) , (Y) )
# else
#   define __ASSUME_ALIGNED( X , Y )
# endif
#endif

// setting feature test macros for libc
#if defined( __GNUC__ ) || defined( __clang__ )
//#define _ISOC11_SOURCE
# define _POSIX_C_SOURCE 200809L
# define _XOPEN_SOURCE 700
#endif

#ifdef _WIN32
# include "stdafx.h"
#endif

#endif /* _CONFIG_H */

