+- AppOptions options processing implementation
+- App variants interfaces & implementation
+- Input/Output file processing interface & implementation
* working quest-example and quest01 from quest-template:
  * simple wrapper class/struct for matrices
  * i/o for matrices
  * algorithms dispatcher
  * c/c++ variants of quest01 algorithms
  * fortran variants of quest01 algorithms
  * performance comparsion
+- BUILD_VANILLA review
* BUILD_THREADING review
+ add missing checks for third parties to main CMakeLists.txt
* add extra third parties for tests: GSL, FFTW, PETSc, Hypre/BoomerAMG, SuiteSparse, 
  CGAL, libFLAME/BLIS(https://www.cs.utexas.edu/~flame/web/) etc
* progress bar and logger logic review
* cli parsing review, further reduce copypasting
* implement (some) standard cblas interfaces
* README
* write tests and scripts to automate running them
* write build tests for at least 27 build variants:
  3(linux/os x/win) * 3(basic/full/vanilla) * 3(gnu/intel/clang/msvc compiler)
* test compilation on pgi/ibm/pathscale compilers
* add support for gziped i/o via boost::iostreams
